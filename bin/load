#!/usr/local/bin/php
<?php

$self = __FILE__;

if ( count( $argv ) != 2 ) {
    echo '{"error":"$self requires a JSON input object"}';
    exit;
}

$json_input = $argv[1];

$input = json_decode( $json_input );

if ( !$input ) {
    echo '{"error":"$self - invalid JSON."}';
    exit;
}

$output = (object)[];

include "genapp.php";

$genapp = new GenApp( $input, $output );

## process inputs here to produce output

## does the project already exist ?

if ( file_exists( "_loaded" ) ) {
    $response =
        json_decode(
            $genapp->tcpquestion(
                [
                 "id"           => "q1"
                 ,"title"       => "<h5>Project '$input->_project' is not empty</h5>"
                 ,"icon"        => "warning.png"
                 ,"text"        => ""
                 ,"timeouttext" => "The time to respond has expired, please submit again."
                 ,"buttons"     => [ "Erase previous results", "Cancel" ]
                 ,"fields" => [
                     [
                      "id"          => "l1"
                      ,"type"       => "label"
                      ,"label"      => "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Previous results will be permenantly removed!"
                      ,"align"      => "center"
                     ]
                 ]
                ]

            )
        );
    
    if ( $response->_response->button == "cancel" ) {
        echo '{"_message":{"icon":"information.png","text":"Canceled"}}';
        exit;
    }
}

## check if proper file loaded

$cgfile   = $input->cgfile[0];
$cgfilebn = basename( $cgfile );
$res      = $genapp->run_cmd( "file $cgfile" );

if ( strpos( $res, "gzip compressed data" ) === false ) {
    echo '{"_message":{"icon":"toast.png","text":"The provided CHARMM-GUI output file <i>' . $cgfilebn . '</i> does not appear to be in the correct format"}}';
    exit;
}
    
## attempt to extract

$genapp->run_cmd( "[ -d \"charmm-gui\" ] && rm -fr charmm-gui; mkdir charmm-gui && cd charmm-gui && tar zxf $cgfile --strip-components=1 && chmod -R g+w .", false );

## check for expected namd directory

if ( !is_dir( "charmm-gui/namd" ) ) {
    echo '{"_message":{"icon":"toast.png","text":"The extracted CHARMM-GUI output file <i>' . $cgfilebn . '</i> does not not contain a namd directory.<br>Are you certain you checked NAMD under Input Generation Options when running CHARMM-GUI?"}}';
    exit;
}
    

## looks ok so far... write loaded file
try {
    file_put_contents( "_loaded", $input->desc . "\n" );
} catch (Exception $e ) {
    echo '{"_message":{"icon":"toast.png","text":"Error storing load information"}}';
    exit;
}

## save _refpdb info if refpdb present
if ( isset( $input->refpdb ) ) {
    try {
        file_put_contents( "_refpdb", $input->refpdb[0] . "\n" );
    } catch (Exception $e ) {
        echo '{"_message":{"icon":"toast.png","text":Error storing reference pdb information"}}';
        exit;
    }
} else {
    if ( file_exists( "_refpdb" ) ) {
        if ( false === unlink( "_refpdb" ) ) {
            echo '{"_message":{"icon":"toast.png","text":"Error removing pre-existing referencd pdb information"}}';
            exit;
        }
    }
}

## log results to textarea

$output->_textarea = "JSON output from executable:\n" . json_encode( $output, JSON_PRETTY_PRINT ) . "\n";
$output->_textarea .= "JSON input from executable:\n"  . json_encode( $input, JSON_PRETTY_PRINT )  . "\n";
$output->_textarea .= $res . "\n";

## final complete message

$output->_textarea .= "\nLOAD COMPLETE\n";

echo json_encode( $output );
